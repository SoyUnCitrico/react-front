{"version":3,"sources":["components/TodoContext/index.js","hooks/useLocalStorage.js","components/TodoCounter/TodoCounter.js","components/TodoSearch/TodoSearch.js","components/TodoList/TodoList.js","components/TodoIcon/index.js","components/TodoIcon/CompleteIcon.js","components/TodoIcon/DeleteIcon.js","components/TodoItem/TodoItem.js","components/TodoForm/TodoForm.js","components/CreateTodoButton/CreateTodoButton.js","components/Modal/Modal.js","components/TodoStates/TodoError.js","components/TodoStates/TodoLoading.js","components/TodoStates/EmptyTodo.js","components/App/AppUI.js","components/App/App.js","index.js"],"names":["TodoContext","createContext","TodoProvider","props","itemName","initialValue","useState","error","setError","loading","setLoading","item","setItem","useEffect","setTimeout","parsedItem","localStorageItem","localStorage","getItem","JSON","parse","stringify","saveItem","newItem","stringifiedItem","useLocalStorage","todos","saveTodos","searchValue","setSearchValue","openModal","setOpenModal","completedTodos","filter","todo","completed","length","totalTodos","searchedTodos","todoText","text","toLowerCase","searchText","includes","Provider","value","addTodo","newTodos","push","completeTodo","todoIndex","findIndex","deleteTodo","splice","children","TodoCounter","useContext","className","TodoSearch","placeholder","onChange","event","target","TodoList","iconTypes","color","fill","TodoIcon","type","onClick","CompleteIcon","onComplete","DeleteIcon","onDelete","TodoItem","TodoForm","newTodoValue","setNewTodoValue","onSubmit","preventDefault","CreateTodoButton","prevState","Modal","ReactDOM","createPortal","document","getElementById","TodoError","TodoLoading","EmptyTodo","AppUI","Array","map","i","App","render"],"mappings":"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","file":"static/js/main.6786fb21.chunk.js","sourcesContent":["import React, { useState, createContext } from 'react';\nimport {useLocalStorage} from '../../hooks/useLocalStorage';\n\nconst TodoContext = createContext();\n\nconst TodoProvider = (props) => {\n  const {\n    item: todos,\n    saveItem: saveTodos,\n    loading,\n    error,\n  } = useLocalStorage('TODOS_V1', []);\n  const [searchValue, setSearchValue] = useState('');\n  const [openModal, setOpenModal] = useState(false);\n  const completedTodos = todos.filter(todo => !!todo.completed).length;\n  const totalTodos = todos.length;\n\n  let searchedTodos = [];\n\n  if (!searchValue.length >= 1) {\n    searchedTodos = todos;\n  } else {\n    searchedTodos = todos.filter(todo => {      \n      const todoText = todo.text.toLowerCase();\n      const searchText = searchValue.toLowerCase();\n      return todoText.includes(searchText);\n    });\n  }\n\n  const addTodo = (text) => {\n    const newTodos = [...todos];\n    newTodos.push({\n      completed: false,\n      text: text,\n    });\n    saveTodos(newTodos);\n  };\n  \n  const completeTodo = (text) => {\n    const todoIndex = todos.findIndex(todo => todo.text === text);\n    const newTodos = [...todos];\n    newTodos[todoIndex].completed = !newTodos[todoIndex].completed;\n    saveTodos(newTodos);\n  };\n\n  const deleteTodo = (text) => {\n    const todoIndex = todos.findIndex(todo => todo.text === text);\n    const newTodos = [...todos];\n    newTodos.splice(todoIndex, 1);\n    saveTodos(newTodos);\n  };\n\n  return (\n    <TodoContext.Provider value={{\n      loading,\n      error,\n      totalTodos,\n      completedTodos,\n      searchValue,\n      setSearchValue, \n      searchedTodos,\n      addTodo,\n      completeTodo,\n      deleteTodo,\n      openModal,\n      setOpenModal,\n    }}>\n      {props.children}\n    </TodoContext.Provider>\n  );\n}\n\nexport {\n  TodoContext,\n  TodoProvider,\n};","import { useState, useEffect } from 'react';\n\nconst useLocalStorage = (itemName, initialValue) => {\n  const [error, setError] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [item, setItem] = useState(initialValue);\n\n  useEffect(() => {\n    setTimeout(() => {\n      try {\n        const localStorageItem = localStorage.getItem(itemName);\n        let parsedItem;\n        \n        if (!localStorageItem) {\n          localStorage.setItem(itemName, JSON.stringify(initialValue));\n          parsedItem = initialValue;\n        } else {\n          parsedItem = JSON.parse(localStorageItem);\n        }\n\n        setItem(parsedItem);\n        setLoading(false);\n      } catch(error) {\n        setError(error);\n      }\n    }, 500);\n  });\n  \n  const saveItem = (newItem) => {\n    try {\n      const stringifiedItem = JSON.stringify(newItem);\n      localStorage.setItem(itemName, stringifiedItem);\n      setItem(newItem);\n    } catch(error) {\n      setError(error);\n    }\n  }\n\n  return {\n    item,\n    saveItem,\n    loading,\n    error,\n  };\n\n}\n\nexport { useLocalStorage };","import React, { useContext } from \"react\";\nimport { TodoContext } from \"../TodoContext\";\nimport './TodoCounter.css'\n\nconst TodoCounter = () => {\n    const {totalTodos, completedTodos} = useContext(TodoContext);\n    return(\n        <h2 className=\"TodoCounter\" >Has completado {completedTodos} de {totalTodos} TODO'S</h2>\n    )\n}\n\nexport { TodoCounter };","import React, {useContext} from \"react\";\nimport { TodoContext } from \"../TodoContext\";\nimport './TodoSearch.css';\n\nconst TodoSearch = () => {\n    const {searchValue, setSearchValue} = useContext(TodoContext);\n    const onSearchValueChange = (event) => {\n        setSearchValue(event.target.value);\n    }\n    return(\n        <input \n            className=\"TodoSearch\"\n            placeholder=\"Cebolla\"\n            value={searchValue}\n            onChange={onSearchValueChange}\n        />\n    )\n}\n\nexport { TodoSearch };","import React from \"react\";\nimport './TodoList.css'\n\nconst TodoList = (props) => {\n    return(\n        <section>\n            <ul>\n                {props.children}\n            </ul>\n        </section>\n    )\n}\n\nexport { TodoList };","import React from \"react\";\nimport { BsXLg, BsCheckLg } from \"react-icons/bs\";\nimport './TodoIcon.css'\n\nconst iconTypes = {\n  \"check\" : color => (\n    <BsCheckLg\n      className=\"TodoIcon_check\" \n      fill={color}\n    />\n  ),\n  \"delete\" : color => (\n    <BsXLg\n      className=\"TodoIcon_delete\" \n      fill={color}\n    />\n  ),\n};\n\nconst TodoIcon = ({\n  type,\n  color = 'gray',\n  onClick\n}) => {\n  return (\n    <span\n      className={`TodoIcon_container TodoIcon_container_${type}`}\n      onClick={onClick}\n    >\n      { iconTypes[type](color) }\n    </span>\n  )\n}\n\nexport { TodoIcon };","import React from \"react\";\nimport { TodoIcon } from './';\n\nconst CompleteIcon = ({\n  completed,\n  onComplete,\n}) => {\n  return ( \n    <TodoIcon\n      type=\"check\"\n      color={completed ? '#4caf50' : 'gray'}\n      onClick={onComplete}\n    />\n  )\n}\n\nexport { CompleteIcon };","import React from \"react\";\nimport { TodoIcon } from './';\n\nconst DeleteIcon = ({\n  onDelete,\n}) => {\n  return ( \n    <TodoIcon\n      type=\"delete\"\n      onClick={ onDelete }\n    />\n  )\n}\n\nexport { DeleteIcon };","import React from \"react\";\nimport { CompleteIcon } from \"../TodoIcon/CompleteIcon\";\nimport { DeleteIcon } from \"../TodoIcon/DeleteIcon\";\nimport './TodoItem.css';\n\nconst TodoItem = (props) => {\n\n    return(\n        <li className=\"TodoItem\">\n            <CompleteIcon\n                completed={props.completed}\n                onComplete={props.onComplete}\n            ></CompleteIcon>\n\n            <p className={`TodoItem-p ${props.completed && 'TodoItem-p--completed'}`}>\n                {props.text}\n            </p>\n            \n            <DeleteIcon \n                onDelete={props.onDelete}\n            />\n        </li>\n    )\n\n}\n\nexport { TodoItem };","import React, {useContext, useState} from \"react\";\nimport { TodoContext } from \"../TodoContext\";\nimport './TodoForm.css';\n\nconst TodoForm = () => {\n  const [newTodoValue, setNewTodoValue] = useState('');\n  const {\n    addTodo,\n    openModal,\n    setOpenModal,\n  } = useContext(TodoContext);\n\n  const onChange = (event) => {\n    setNewTodoValue(event.target.value);\n  }\n\n  const onCancel = () => {\n      setOpenModal(!openModal)\n  }\n\n  const onSubmit = (event) => {\n        event.preventDefault();\n        addTodo(newTodoValue);\n        setOpenModal(!openModal)\n  }\n\n  return (\n    <form className=\"TodoForm\" onSubmit={onSubmit}>\n      <label className=\"formLabel\">¿Qué hay que hacer?</label>\n      <textarea\n        className=\"formText\"\n        value={newTodoValue}\n        onChange={onChange}\n        placeholder=\"Cortar la cebolla\" \n      />\n      <div className=\"formButtons\">\n        <button\n          className=\"buttonCancel\"\n          type=\"button\"\n          onClick={onCancel}\n        >\n          Cancelar\n        </button>\n        <button\n          className=\"buttonAccept\"\n          type=\"submit\"\n        >\n          Añadir\n        </button>\n      </div>\n    </form>\n  )\n}\n\nexport { TodoForm };","import React from \"react\";\nimport './CreateTodoButton.css';\n\nconst CreateTodoButton = (props) => {\n    const onClickedButton = () => {\n        props.setOpenModal(prevState => !prevState);\n    }\n    return(\n        <button \n            className=\"CreateTodoButton\"\n            onClick={onClickedButton}\n        >\n            +\n        </button>\n    )\n}\n\nexport { CreateTodoButton };","import React from \"react\";\nimport ReactDOM  from \"react-dom\";\nimport './Modal.css';\n\nconst Modal = ({children}) => {\n  return ReactDOM.createPortal(\n    <div className=\"ModalBackground\">\n      { children }\n    </div>,\n    document.getElementById('modal')\n  );\n}\n\nexport { Modal };","import React from 'react';\n\nconst TodoError = ({ error }) => {\n  return (<>\n  <p>¡Lo siento!</p>\n  <p>Ocurrio un error al cargar tu contenido</p>\n  </>)\n}\n\nexport { TodoError };","import React from 'react';\nimport './TodoLoading.css';\n\nconst TodoLoading = ({error}) => {\n  return (\n    <div className=\"TodoLoading-container\">\n      <span className=\"TodoLoading-completeIcon\">&#10003;</span>\n      <p className=\"TodoLoading-text\">Cargando...</p>\n      <span className=\"TodoLoading-deleteIcon\">&#120;</span>\n    </div>\n  )\n}\n\nexport { TodoLoading };","import React from 'react';\n\nconst EmptyTodo = () => {\n  return <p>¡Crea tu primer TODO!</p>\n}\n\nexport { EmptyTodo };","import React, { Fragment, useContext } from \"react\";\nimport { TodoContext } from \"../TodoContext\";\nimport { TodoCounter } from \"../TodoCounter/TodoCounter\";\nimport { TodoSearch } from \"../TodoSearch/TodoSearch\";\nimport { TodoList } from \"../TodoList/TodoList\";\nimport { TodoItem } from \"../TodoItem/TodoItem\";\nimport { TodoForm } from \"../TodoForm/TodoForm\";\nimport { CreateTodoButton } from \"../CreateTodoButton/CreateTodoButton\";\nimport { Modal } from \"../Modal/Modal\";\nimport { TodoError } from \"../TodoStates/TodoError\";\nimport { TodoLoading } from \"../TodoStates/TodoLoading\";\nimport { EmptyTodo } from \"../TodoStates/EmptyTodo\";\n\nconst AppUI = () => {\n  const {\n    error,\n    loading,\n    searchedTodos,\n    completeTodo,\n    deleteTodo,\n    openModal,\n    setOpenModal,\n  } = useContext(TodoContext);\n  return(\n    <Fragment>\n      <TodoCounter />\n      <TodoSearch />\n      <TodoList>\n        {error && <TodoError error={error}/>}\n        {/* {loading && <TodoLoading error={error}/>} */}\n        {loading && new Array(3).fill(1).map((i) => <TodoLoading key={i} error={error}/>)}\n        {(!loading && !searchedTodos.length) && <EmptyTodo />}\n        { searchedTodos.map(todo => (\n          <TodoItem\n            key={todo.text}\n            text={todo.text}\n            completed={todo.completed}\n            onComplete={()=> completeTodo(todo.text)}\n            onDelete={()=> deleteTodo(todo.text)}\n          />\n        ))\n        }    \n      </TodoList>  \n      {!!openModal && (\n        <Modal>\n          <TodoForm />\n        </Modal>\n      )}\n      \n      <CreateTodoButton \n        setOpenModal={setOpenModal}\n      />\n    </Fragment>\n  )\n}\n\nexport { AppUI };","import React from \"react\";\nimport {AppUI} from './AppUI.js';\nimport { TodoProvider } from '../TodoContext'\n\nfunction App() {\n\n  return (\n    <TodoProvider>\n      <AppUI/>\n    </TodoProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App.js';\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// reportWebVitals();\n"],"sourceRoot":""}